version: '3'

services:

  generator:
    build: ./generator
    restart: always
    container_name: generator
    depends_on:
      - broker
      - zookeeper
      - connect
      - mongo
      - schema-registry
    environment:
      KAFKA_BROKER_URL: broker:9092
      TRANSACTIONS_TOPIC: measure
      TRANSACTIONS_PER_SECOND: 2
    networks:
      - main_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - main_network

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - main_network

  mongo:
    image: mongo:latest
    container_name: mongo
    command: --oplogSize 128
    networks:
      - main_network
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_USERNAME: admin
      MONGO_INITDB_PASSWORD: admin
      MONGO_INITDB_DATABASE: m_db
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  connect:
    image: radarcns/kafka-connect-mongodb-sink:latest
    container_name: connect
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    networks:
      - main_network
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:9092'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "mongodb-sink"
      CONNECT_CONFIG_STORAGE_TOPIC: "mongodb-sink.config"
      CONNECT_OFFSET_STORAGE_TOPIC: "mongodb-sink.offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "mongodb-sink.status"
      CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_OFFSET_STORAGE_FILE_FILENAME: "/tmp/mongdb-sink.offset"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_LOG4J_LOGGERS: "org.reflections=ERROR"
      KAFKA_BROKERS: 1
    volumes:
      - ./kafka-mongo-sink/sink.properties:/etc/kafka-connect/sink.properties:ro

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    restart: always
    container_name: schema-registry
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    networks:
      - main_network
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

#### Rest-proxy is disabled in order to save resources on local machine
      #  rest-proxy:
      # image: confluentinc/cp-kafka-rest:5.3.0
      #depends_on:
      #- zookeeper
      #- broker
      #- schema-registry
      #ports:
      #- 8082:8082
      #hostname: rest-proxy
      #container_name: rest-proxy
      #networks:
      #- main_network
      #environment:
      #KAFKA_REST_HOST_NAME: rest-proxy
      #KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
      #KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      #KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

  drill:
    build: ./drill/
    container_name: drill
    restart: always
    ports:
      - '8047:8047'
    tty: true
    networks:
      - main_network
    command: /bin/bash

  sched_aggregator:
    build: ./sched_aggregator
    restart: always
    container_name: sched_aggregator
    depends_on:
      - broker
      - zookeeper
      - connect
      - mongo
      - schema-registry
      - drill
    networks:
      - main_network

networks:
  main_network:
    driver: bridge
